{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/oem/Desktop/lifology_BlogApp/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { gql, useQuery } from '@apollo/client';\nimport Link from 'next/link';\n\nconst GET_POSTS = gql`\n  query GetPosts {\n    posts {\n      id\n      title\n      imageUrl\n      author {\n        name\n      }\n      createdAt\n    }\n  }\n`;\n\nexport default function Home() {\n  const { data, loading, error } = useQuery(GET_POSTS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-6\">Blog Posts</h1>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n        {data?.posts?.map((post: any) => {\n          // Parse the createdAt date\n          const createdAtDate = new Date(post.createdAt);\n\n          // Check if the date is valid\n          const isValidDate = !isNaN(createdAtDate.getTime());\n\n          // Format the date only if it's valid\n          const formattedDate = isValidDate\n            ? createdAtDate.toLocaleDateString()\n            : \"Invalid Date\";\n\n          return (\n            <Link key={post.id} href={`/blog/${post.id}`} className=\"block\">\n              <div className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300 h-full flex flex-col\">\n                {post.imageUrl && (\n                  <img\n                    src={post.imageUrl}\n                    alt={post.title}\n                    className=\"w-full h-48 object-cover\"\n                  />\n                )}\n                <div className=\"p-4 flex flex-col flex-grow\">\n                  <h2 className=\"text-xl font-semibold mb-2 line-clamp-2\">{post.title}</h2>\n                  <p className=\"text-gray-600 text-sm mb-2\">By {post.author.name}</p>\n                  <p className=\"text-gray-500 text-xs mt-auto\">\n                    {formattedDate}\n                  </p>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAGA;AADA;AAAA;AAFA;;;;AAKA,MAAM,YAAY,8IAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;AAYtB,CAAC;AAEc,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,WAAQ,AAAD,EAAE;IAE1C,IAAI,SAAS,qBAAO,8OAAC;kBAAE;;;;;;IACvB,IAAI,OAAO,qBAAO,8OAAC;;YAAE;YAAQ,MAAM,OAAO;;;;;;;IAE1C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAI,WAAU;0BACZ,MAAM,OAAO,IAAI,CAAC;oBACjB,2BAA2B;oBAC3B,MAAM,gBAAgB,IAAI,KAAK,KAAK,SAAS;oBAE7C,6BAA6B;oBAC7B,MAAM,cAAc,CAAC,MAAM,cAAc,OAAO;oBAEhD,qCAAqC;oBACrC,MAAM,gBAAgB,cAClB,cAAc,kBAAkB,KAChC;oBAEJ,qBACE,8OAAC,4JAAA,CAAA,UAAI;wBAAe,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;wBAAE,WAAU;kCACtD,cAAA,8OAAC;4BAAI,WAAU;;gCACZ,KAAK,QAAQ,kBACZ,8OAAC;oCACC,KAAK,KAAK,QAAQ;oCAClB,KAAK,KAAK,KAAK;oCACf,WAAU;;;;;;8CAGd,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAA2C,KAAK,KAAK;;;;;;sDACnE,8OAAC;4CAAE,WAAU;;gDAA6B;gDAAI,KAAK,MAAM,CAAC,IAAI;;;;;;;sDAC9D,8OAAC;4CAAE,WAAU;sDACV;;;;;;;;;;;;;;;;;;uBAbE,KAAK,EAAE;;;;;gBAmBtB;;;;;;;;;;;;AAIR"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}